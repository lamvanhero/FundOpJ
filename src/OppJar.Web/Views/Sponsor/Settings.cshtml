@*@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@using Leeto.Common.Enums
@model SponsorSettingsViewModel*@
@{
    Layout = "_Layout";
}

<!-- / -->
<!-- ############ LAYOUT END-->
<!-- BEGIN PAGE LEVEL STYLES -->
<link href="~/scripts/ImageCrop/jcrop/css/jquery.Jcrop.min.css" rel="stylesheet" type="text/css" />
<link href="~/scripts/ImageCrop/image-crop.min.css" rel="stylesheet" type="text/css" />

<!-- END PAGE LEVEL STYLES -->




<style>
    .edit-profile-btn {
        margin-top: 20%;
        margin-left: 20%;
    }

    .subdivmenu {
        background-color: rgb(78, 117, 151);
        height: 56px;
        margin-top: 56px;
        position: fixed;
        z-index: 999;
        width: 100%;
    }


    @@media(max-width:768px) {
        .edit-profile-btn {
            display: none;
        }

        .circlePic {
            margin-top: 0 !important;
        }

        .edit-profile-btn-new {
            top: 125px !important;
        }
    }
</style>
<style>
        .item {
            background: url('@Model.CoverUrl') no-repeat fixed;
            /*background-size: cover;
            background-position: top -144px;*/
            background-size: 100% auto;
            background-position-y: 110px;
            background-position-x: center;
            overflow: hidden;
        }




        .item-bg {
            background: linear-gradient(to right,rgba(79,135,184, 0.8), rgba(114,235,221,0.8) );
        }


        * {
            font-weight: bold !important;
        }

        h4 {
            font-size: 14pt;
        }

        p {
            color: inherit;
            opacity: 0.6;
        }

        .list-item {
            margin-bottom: 3px;
        }

        #sponsor-col .list-left {
            padding-right: 10px;
        }

        img {
            object-fit: cover;
        }

        .rt-list > li {
            margin-top: 20px;
        }

        #details * {
            line-height: 28px;
        }

        .pagination li * {
            margin: 0 10px;
        }

        .pagination a {
            width: 34px;
        }

        .sponsor-grid div {
            margin-bottom: 20px;
        }

        #sponsorModal {
            font-family: "nunito-regular";
        }

        .green {
            background-color: #62B8CC  ;
        }

        .modal-dialog {
            width: 100%;
            margin: 0;
            padding: 0;
        }

        .modal-content {
            height: auto;
            border-radius: 0;
        }
         .modal-body{
            overflow: auto;
        }
</style>

<div class="app center" id="vue">
    <div id="content" class="app-content box-shadow-z0 white" role="main">


        <div class="item" style="z-index:1;">
            <input id="coverImage" type="file" style="display: none;" />
            <input type="button" class="btn btn-sm rounded m-l white edit-profile-btn-new" onclick="uploadCoverImg()" value="Edit Banner Image" />
            <div class="subdivmenu">
                <div class="p-t submenu" style="">
                    <a><h6 style="color:white">Main Settings</h6></a>
                    <a v-bind:href="'/sponsor/applications/'+ model.slug"><h6 style="color: #cccccc;">Applications</h6></a>
                    <a v-bind:href="'/sponsor/funddistribution/'+ model.slug"><h6 style="color: #cccccc;">Fund Distribution</h6></a>
                </div>
            </div>
            <div class="item-bg" style="line-height:264px;">
            </div>

            <div class="p-a-lg pos-rlt" style="padding-bottom:0px !important">
                <div class="edit-profile-btn">
                    <input id="profileImage" type="file" style="display: none;" />
                    <input type="button" class="btn btn-sm rounded m-l white " onclick="uploadProfileImg()" style="color:gray" value="Edit Profile Image" />
                </div>
            </div>
        </div>
    </div>

    <div class="app-body white p-t-0" id="view">
        <div class="circlePic circle" style="z-index:500; margin-top: -90px; margin-left: 5%;">
            <i id="post-load-spinner" class="fa fa-spinner fa-spin hide" style="position:absolute; left: calc(50% - 25px); top: calc(50% - 25px); font-size: 50px; color:#4f87b8"></i>
        </div>
        <div class="edit-dp-img">
            <input type="button" class="btn btn-sm rounded m-l white " onclick="uploadProfileImg()" style="color:gray" value="Edit Profile Image" />
        </div>
        <div class="row-col">
            <div class="padding">
                <div class="row">
                    <div class="col-md-4 col-md-offset-2">
                        <div class="box b-a" style="border-radius:5px">
                            <div class="row">
                                @if (Model.IsIndividual)
                                {
                                    <div class="col-md-6">
                                        <div class="box-header b-b">
                                            <h3>First Name</h3>
                                        </div>
                                        <div class="box-body">
                                            <input class="p-x-sm btn-sm b-a onlyAlphNumaric" type="text" v-model="model.firstName" style="width:100%">
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="box-header b-b">
                                            <h3>Last Name</h3>
                                        </div>
                                        <div class="box-body">
                                            <input class="p-x-sm btn-sm b-a onlyAlphNumaric" type="text" v-model="model.lastName" style="width:100%">
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col">
                                        <div class="box-header b-b">
                                            <h3>Business Name</h3>
                                        </div>
                                        <div class="box-body">
                                            <input class="p-x-sm btn-sm b-a onlyAlphNumaric" type="text" v-model="model.businessName" style="width:100%">
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="row">
                                <div class="col-md-12">

                                    <div class="box-body">

                                        <div class="row p-b-sm p-r-sm"><div class="col-xs-4 p-t-sm">Location :</div> <input type="text" placeholder="Location" v-model="model.location" class="col-xs-8 btn-sm b-a"></div>
                                    </div>
                                </div>
                            </div>
                            <div v-if="model.isIndividual" class="row">
                                <div class="col-md-12">

                                    <div class="box-body">

                                        <div class="row p-b-sm p-r-sm"><div class="col-xs-4 p-t-sm">Total Balance :</div> <input type="text" readonly="readonly" placeholder="Location" v-model="model.balance" class="col-xs-8 btn-sm b-a"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box b-a" style="border-radius:5px">
                            <div class="box-header b-b">
                                <h3>Sponsor Privacy</h3>
                            </div>

                            <div class="box-body">
                                <select id="single" style="width: 100%" class="form-control select2" ui-jp="select2" ui-options="{theme: 'bootstrap'}">
                                    @*<option value="@PrivacyPermission.Open">Anyone can view</option>*@
                                    <option value="xxxx">Anyone can view</option>
                                    @*<option value="@PrivacyPermission.Closed">Only sponsor can view</option>*@
                                    <option value="cccc">Only sponsor can view</option>
                                </select>

                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="box b-a" style="border-radius:5px">
                            <div class="box-header b-b">
                                <h3>About Us</h3>
                            </div>

                            <div class="box-body">
                                <p>
                                    <textarea class="form-control" v-model="model.bio" style="border-radius:5px"></textarea>
                                </p>
                            </div>
                        </div>
                        <div v-if="!model.isIndividual" class="box b-a" style="border-radius:5px">
                            <div class="box-header b-b">
                                <h3>Corporate Sponsor Admins <span class="pull-right" style="margin-top:-7px"><a class="btn btn-sm rounded green" data-toggle="modal" data-target="#add-admin-modal">Add+</a></span></h3>
                            </div>

                            <ul v-for="admin in model.admins" class="list-group">
                                <li v-if="admin.isOwner" class="list-group-item" style="height:64px">
                                    <a href class="pull-left w-40 m-r"><img v-bind:src="admin.imageUrl" class="img-responsive img-circle"></a>
                                    <div class="clear" style="">
                                        <a class="_500 block" style="margin-top:10px; display:flex; justify-content:space-between"><p class="">{{admin.firstName}} {{admin.lastName}}</p><p class="">Owner</p></a>
                                    </div>
                                </li>
                                <li v-else class="list-group-item" style="height:64px">
                                    <a href class="pull-left w-40 m-r"><img v-bind:src="admin.imageUrl" class="img-responsive img-circle"></a>
                                    <div class="clear" style="">
                                        <a class="_500 block" style="margin-top:10px; display:flex; justify-content:space-between"><p class="">{{admin.firstName}} {{admin.lastName}}</p></a>
                                    </div>
                                </li>
                            </ul>
                        </div>

                        <div v-if="model.isIndividual" class="box b-a" style="border-radius:5px">
                            <div class="box-header b-b">
                                <h3>Add Funds</h3>
                            </div>

                            <form class="box-body" id="payment-form">
                                <div class="m-b-sm">
                                    From Credit card
                                </div>
                                <div v-if="!newCard">
                                    <select id="creditcards" style="width: 100%" class="form-control select2" ui-jp="select2" ui-options="{theme: 'bootstrap'}">
                                        <option disabled selected>Populate from existing profile</option>
                                    </select>
                                </div>
                                <div v-if="!newCard" id="insert-card">
                                    <div v-on:click="toggleNewCard" class="btn btn-default m-t-sm" style="width:100%; text-align:left">
                                        <span>
                                            <span class="text-sm pull-left">Add New Card</span><i class="fa fa-plus pull-right" style="color: #4f87b8"></i>
                                        </span>
                                    </div>
                                </div>
                                <div v-else id="insert-card">
                                    <div v-on:click="toggleNewCard" class="btn btn-default m-t-sm" style="width:100%; text-align:left">
                                        <span>
                                            <span class="text-sm pull-left">Don't Add New Card</span><i class="fa fa-minus pull-right" style="color: #4f87b8"></i>
                                        </span>
                                    </div>

                                </div>
                                <div class="row m-y">
                                    <div class="input-group m-b col-sm-12 text-xl" style="height: 75px">
                                        <span class="input-group-addon white" style="color: grey; font-size: 2rem">$</span>
                                        <input type="text" id="amount" required data-parsley-min="1" data-parsley-type="integer" class="form-control parsley-success has-value onlyNumaric" value=""
                                               class="form-control text-sm" style="height: 75px; font-size: 2rem; border-radius: 0px !important; text-align:right;box-shadow: none !important;" placeholder="0">
                                        <span class="input-group-addon white pos-rlt" style="color: grey; font-size: 2rem">
                                            .00
                                        </span>

                                    </div>
                                </div>
                                <div class="row m-b-sm">
                                    <div class="col-sm-12">
                                        <button type="submit" class="pull-right btn rounded green">Add Funds</button>
                                    </div>
                                </div>


                            </form>

                        </div>

                    </div>
                </div>

                <div class="row m-b-sm">
                    <div class="col-md-11">
                        <div v-on:click="save()" class="pull-right btn rounded green m-t-2">Save Changes</div>
                    </div>
                </div>
            </div>

        </div>

    </div>

    <div id="add-admin-modal" class="modal fade animate" data-backdrop="true">
        <div class="modal-dialog" id="animate">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Admin</h5>
                    <div class="row p-t">
                        <div class="col-sm-8">
                            <input type="text" id="admin-search" class="form-control form-control-sm rounded" placeholder="Search">
                        </div>
                        <div class="col-sm-4">
                            <div class="col pull-right btn btn-sm btn-default" onclick="searchAdmin()">Search</div>
                        </div>
                    </div>
                </div>
                <div class="modal-body">
                    <ul class="list-group">
                        <li v-for="admin in adminResults" class="list-group-item" style="height:64px">
                            <div class="col-xs-10 row">
                                <div class="row col-xs-9" style="display:flex; justify-content: left">
                                    <div class="col-xs-4">
                                        <a href class="w-40 p-x-0">
                                            <img v-bind:src="admin.profileImageUrl" class="img-responsive img-circle">
                                        </a>
                                    </div>
                                    <div class="col-xs-8" style="margin-top:10px;">{{admin.firstName}} {{admin.lastName}}</div>
                                </div>

                            </div>

                            <div class="col-xs-2 text-right" style="margin-top: 10px">
                                <button class="col pull-right btn btn-sm green add-admin-btn" onclick="addAdmin(this)" :data-admin-id="admin.id" :data-admin-first-name="admin.firstName" :data-admin-last-name="admin.lastName" :data-admin-image-url="admin.profileImageUrl">Select</button>
                            </div>
                        </li>
                    </ul>
                </div>
                <div class="modal-footer" style="border-top:none">
                    <button type="button" class="btn btn-default btn-sm p-x-md" data-dismiss="modal">Close</button>
                </div>
            </div><!-- /.modal-content -->
        </div>
    </div>

    <div class="modal fade" id="myModal" tabindex="-1" role="basic" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                    <h4 class="modal-title">Upload Banner Image</h4>
                </div>
                <div class="modal-body">
                    <div id="ModelBodyDiv">

                        <div class="row">
                            <div class="col-md-12 responsive-1024" id="divCropImage">
                                <img src="@Model.CoverUrl" id="CropImage" alt="Banner Image" />
                            </div>
                        </div>

                        <input type="hidden" id="crop_x" name="x" />
                        <input type="hidden" id="crop_y" name="y" />
                        <input type="hidden" id="crop_w" name="w" />
                        <input type="hidden" id="crop_h" name="h" />
                    </div>

                </div>

                <div class="modal-footer">
                    <input type="file" id="FileBannerImage" />
                    <button type="button" id="btnBannerImage" class="btn green btn-outline">Upload Banner Image</button>
                    <button type="button" class="btn dark btn-outline" data-dismiss="modal">Close</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
</div>

@section scripts{
    <!-- BEGIN PAGE LEVEL SCRIPTS -->
    <script src="~/scripts/ImageCrop/jcrop/js/jquery.color.js" type="text/javascript"></script>
    <script src="~/scripts/ImageCrop/jcrop/js/jquery.Jcrop.min.js" type="text/javascript"></script>
    <!-- END PAGE LEVEL SCRIPTS -->

    <script>
    $('#footer').on('click', function () {
        console.log('clicked footer')
        $('#coming-soon').css('visibility', 'visible');
        setTimeout(function () {
            $('#coming-soon').css('visibility', 'hidden');
        }, 1500)
    })

    $('.logo').matchHeight();

    function rotateFoo() {
            var angle = ($("#divCropImage>.jcrop-holder>img").data('angle') + 90) || 90;
            $("#divCropImage>.jcrop-holder>img").css({ 'transform': 'rotate(' + angle + 'deg)' });
            $("#divCropImage>.jcrop-holder>img").data('angle', angle);
        }
        $(function () {
            $(".onlyNumaric").on('keyup', function (e) {
                e.target.value = e.target.value.replace(/[^\d]/g, '');
                return false;
            });
            $(".onlyNumaric").on('keypress', function (event) {
                var v = !event.charCode ? event.which : event.charCode;
                if (v != 8) {
                    var regex = new RegExp("^[0-9]+$");
                    var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
                    if (!regex.test(key)) {
                        event.preventDefault();
                        return false;
                    }
                }
            });
        });
        var model = @Json.Serialize(Model)
        @*var user = @Json.Serialize(await UserManager.GetUserAsync(User)) || {}*@

        //function uploadCoverImg() {
        //    $("#coverImage").click();
        //}

        //$("#btnBannerImage").click(function () {

        //});

        function uploadCoverImg() {
            $("#myModal").modal("show")
        }

        $(document).ready(function () {
            $(window).resize();
        })
        $(window).resize(function () {
            var aspectRatio = ($(window).width() * 325 / 1600) + 110;
            if (parseInt($(window).width()) > 480)
                $(".item").attr("style", "height:" + aspectRatio + "px !important;");
            else
                $(".item").attr("style", "height:110px !important;");
        });
        function readURL(input) {

            if (input.files && input.files[0]) {
                var formData = new FormData();
                formData.append('file', input.files[0]);
                $.ajax({
                    url: '/sponsor/ImageOrientationChangeAsync',
                    method: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    async: true,
                    success: function (result) {
                        $("#divCropImage>.jcrop-holder").remove();
                        var jcrop_api;
                        jcrop_api = $.Jcrop('#CropImage');
                        jcrop_api.setImage("data:image/jpeg;base64,"+result, DemoJCrop());
                    },
                    error: function (err) {
                        console.log(err)
                        toastr.error("Couldn't use this image")
                    }
                })





                //var reader = new FileReader();

                //reader.onload = function (e) {

                //    $("#divCropImage>.jcrop-holder").remove();
                //    var jcrop_api;
                //    jcrop_api = $.Jcrop('#CropImage');
                //    jcrop_api.setImage(e.target.result, DemoJCrop());
                //}
                //reader.readAsDataURL(input.files[0]);
            }
        }



        //function readURL(input) {

        //    if (input.files && input.files[0]) {

        //        orientation(input.files[0], function (base64img, value) {
        //            $("#divCropImage>.jcrop-holder").remove();
        //            var jcrop_api;
        //            jcrop_api = $.Jcrop('#CropImage');
        //            var rotated =jcrop_api.setImage(base64img, DemoJCrop());

        //            //var rotated = $('#placeholder2').attr('src', base64img);
        //            if (value) {
        //                //$("#divCropImage>.jcrop-holder>img")[0].css('transform', rotation[value]);
        //                $("#divCropImage>.jcrop-holder>img").css({ 'transform': 'rotate(90deg)' });
        //            }
        //        });


        //        //var reader = new FileReader();

        //        //reader.onload = function (e) {

        //        //    $("#divCropImage>.jcrop-holder").remove();
        //        //    var jcrop_api;
        //        //    jcrop_api = $.Jcrop('#CropImage');
        //        //    jcrop_api.setImage(e.target.result, DemoJCrop());
        //        //}

        //        //reader.readAsDataURL(input.files[0]);
        //    }
        //}

        function DemoJCrop() {
            $('#CropImage').Jcrop({
                aspectRatio: 1600 / 325,
                onSelect: updateCoords,
                onChange: changeCrop
            });

            function updateCoords(c) {
                $('#crop_x').val(c.x);
                $('#crop_y').val(c.y);
                $('#crop_w').val(c.w);
                $('#crop_h').val(c.h);
            };
            function changeCrop() {
                $('#crop_x').val(0);
                $('#crop_y').val(0);
                $('#crop_w').val(0);
                $('#crop_h').val(0);
            }
        }

        $("#FileBannerImage").on("change",function () {
            readURL(this);
        });

        function uploadProfileImg() {
            $("#profileImage").click();
        }

        $(function () {
            $(".onlyAlphNumaric").on('keypress', function (event) {
                var v = !event.charCode ? event.which : event.charCode;
                if (v != 8) {
                    var regex = new RegExp("^[a-zA-Z0-9\d\\s]+$");
                    var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
                    if (!regex.test(key)) {
                        event.preventDefault();
                        return false;
                    }
                }
            });
            });

        $(document).ready(function() {
            /*
            Upload profile image
            */
            $("#profileImage").change(function () {
                $(".fa-spinner").removeClass("hide");
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var formData = new FormData();
                        formData.append('file', $('#profileImage')[0].files[0]);
                        formData.append('slug', '@Model.Slug')

                        $.ajax({
                            url: '/api/sponsor/profileimage',
                            method: 'POST',
                            data: formData,
                            contentType: false,
                            processData: false,
                            async: true,
                            success: function (result) {
                                $(".fa-spinner").addClass("hide");
                                if (result.success == true) {
                                    document.styleSheets[10].addRule('.circlePic::after','background-image: url("' + result.fileUrl + '")');
                                    document.styleSheets[10].insertRule('.circlePic::after { background-image: url("' + result.fileUrl + '")}', 0);
                                } else {
                                    toastr.error(result.message);
                                }
                            },
                            error: function (err) {
                                $(".fa-spinner").addClass("hide");
                                console.log(err)
                                toastr.error("Couldn't upload image")
                            }
                        })
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });

            /*
            Upload cover image
            */


            $("#btnBannerImage").click(function () {
                if ($('#FileBannerImage')[0].files && $('#FileBannerImage')[0].files[0]) {

                    var x = parseInt($("#crop_x").val()) || 0;
                    var y = parseInt($("#crop_y").val()) || 0;
                    var w = parseInt($("#crop_w").val()) || 0;
                    var h = parseInt($("#crop_h").val()) || 0;
                    if (w > 0 && h > 0) {

                    var formData = new FormData();
                        formData.append('file', $('#FileBannerImage')[0].files[0]);
                        formData.append('slug', '@Model.Slug');
                        formData.append('X', x);
                        formData.append('Y', y);
                        formData.append('W', w);
                        formData.append('H', h);
                    $("#preloader").show();
                    $.ajax({
                        url: '/api/sponsor/image',
                        method: 'POST',
                        data: formData,
                        contentType: false,
                        processData: false,
                        async: true,
                        success: function (result) {
                            if (result.success == true) {
                                $("#myModal").modal("hide")
                                $(".item").css("background", "url('" + result.fileUrl + "') no-repeat fixed");
                                $(".item").css("background-size", "100% auto");
                                $(".item").css("background-position-y", "110px");
                                //$(".item").css("background-position-y", "59px");
                                $(".item").css("background-position-x", "center");
                                //$(".item").css("background-size", "cover");
                            } else {

                                toastr.error(result.message);
                            }
                            $("#preloader").hide();
                        },
                        error: function (result) {
                            $("#preloader").hide();
                        }
                        })
                    } else {
                        toastr.error("Select Image area");
                    }
                }
            });

            @*$("#coverImage1").change(function () {
                if (this.files && this.files[0]) {

                    //var _URL = window.URL || window.webkitURL;
                    //var file, img;
                    //if ((file = this.files[0])) {
                    //    img = new Image();
                    //    img.onload = function () {
                    //        alert(this.width + " " + this.height);
                    //        if (this.width == 1500 && this.height == 260) { }

                    //    };
                    //    img.src = _URL.createObjectURL(file);
                    //}

                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var image = new Image();
                        image.src = e.target.result;
                        image.onload = function () {
                            if (this.width >= 1500 && this.width <= 1600 && this.height >= 240 && this.height <= 270) {
                                var formData = new FormData();
                                formData.append('file', $('#coverImage')[0].files[0]);
                                formData.append('slug', '@Model.Slug')
                                $("#preloader").show();
                                $.ajax({
                                    url: '/api/sponsor/image',
                                    method: 'POST',
                                    data: formData,
                                    contentType: false,
                                    processData: false,
                                    async: true,
                                    success: function (result) {
                                        if (result.success == true) {
                                            $(".item").css("background", "url('" + result.fileUrl + "') no-repeat fixed");
                                            $(".item").css("background-size", "1580px auto");
                                            $(".item").css("background-position-y", "59px");
                                            $(".item").css("background-position-x", "center");
                                            //$(".item").css("background-size", "cover");
                                        } else {

                                            toastr.error(result.message);
                                        }
                                        $("#preloader").hide();
                                    },
                                    error: function (result) {
                                        $("#preloader").hide();
                                    }
                                })
                            } else {
                                toastr.error("Your image should be in width between 1500px to 1600px and height between 240px to 270px.")

                            }
                    }
                }
                            reader.readAsDataURL(this.files[0]);

                }
            });*@
        });

        function chargeCard(cardToken) {
            if ($('#amount').val() != null && $('#amount').val() > 0) {
                $("#preloader").show();
                $.ajax({
                    type: 'POST',
                    @*url: '@Url.Action("MakeDeposit", "Sponsor")',*@
                    data: JSON.stringify({ amount: $('#amount').val(), stripeCardId: cardToken }),
                    datatype: 'json',
                    contentType: "application/json; charset=UTF-8",
                    success: function (result) {
                        model.balance = (parseInt(model.balance) + parseInt( $('#amount').val()));
                        $('#amount').val("");
                        toastr.success('Your deposit processed successfully!');
                        $("#preloader").hide();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        var error = JSON.parse(jqXHR.responseText);
                        toastr.error(error.message);
                        $("#preloader").hide();
                        //console.log('ERROR: ' + result.Message);
                        //toastr.error('Something went wrong')
                    }
                });
            }
        }

        function stripeTokenHandler(token) {
            var amount = $('#amount').val()
            $("#preloader").show();
            // Add new credit card
            if (newCardAdded) {
                $.ajax({
                    type: 'POST',
                    @*url: '@Url.Action("AddCreditCard", "Sponsor")',*@
                    data: JSON.stringify({ stripeCardToken: token.id}),
                    datatype: 'json',
                    contentType: "application/json; charset=UTF-8",
                    success: function (result) {
                        toastr.success('Card Successfully Added!')
                        chargeCard(result.content.cardTokenId)
                        $("#preloader").hide();
                    },
                    error: function (result) {
                        console.log('ERROR: ' + result.Message);
                        toastr.error('Something went wrong')
                        $("#preloader").hide();
                    }
                });
            }
        }

        /* Credit Card */
        var cards = []
        var newCardAdded = false
        //var cards = []
        var stripe = Stripe('pk_test_qN6P8gkWKHdukVtV4cV5tV7M00lNm1GMLW')
        var elements = stripe.elements();

        var style = {
            base: {
                // Add your base input styles here. For example:
                fontSize: '16px',
                lineHeight: '24px'
            }
        };

        // Create an instance of the card Element
        var card = elements.create('card', { style: style });

        var vueAdmin = new Vue({
            el: "#add-admin-modal",
            data: {
                adminResults: []
            },
            mounted: function () {
                console.log('vueAdmin');
            }
        });

        var vue = new Vue({
            el: "#vue",
            data: {
                model: model,
                user: user,
                newCard: false
            },
            mounted: function () {
                console.log("vue mounted, data: ", this._data)
                this.getAllCreditCards()
                this.fundsListener()
            },
            methods: {
                stripeTokenHandler: function stripeTokenHandler(token) {
                    var amount = $('#amount').val()

                    // Add new credit card
                    if (newCardAdded) {
                        $.ajax({
                            type: 'POST',
                            @*url: '@Url.Action("AddCreditCard", "Sponsor")',*@
                            data: JSON.stringify({ stripeCardToken: token.id}),
                            datatype: 'json',
                            contentType: "application/json; charset=UTF-8",
                            success: function (result) {
                                toastr.success('Card Successfully Added!')
                                chargeCard(result.content.cardTokenId)
                            },
                            error: function (result) {
                                console.log('ERROR: ' + result.Message);
                                toastr.error('Something went wrong')
                            }
                        });
                    }
                },
                getAllCreditCards: function getAllCreditCards() {
                    $.ajax({
                        type: 'GET',
                        @*url: '@Url.Action("GetAllCreditCards", "Sponsor")',*@
                        async: true,
                        success: function (result) {
                            if (result.content != null) {
                                for (var i = 0; i < result.content.length; ++i) {
                                    cards.push(new Option('Visa ending in ' + result.content[i].item1, result.content[i].item2))
                                    $('#creditcards').append(new Option('Visa ending in ' + result.content[i].item1, result.content[i].item2))
                                }
                            }
                        },
                        error: function (result) {
                            console.log('ERROR: ' + result.Message);
                        }
                    });
                },
                save: function save() {
                    if (model.firstName != "" && model.lastName != "") {
                    $("#preloader").show();
                    $.ajax({
                        type: 'POST',
                        @*url: '@Url.Action("ChangeSponsorSettigns", "Sponsor")',*@
                        data: JSON.stringify(model),
                        datatype: 'json',
                        contentType: "application/json; charset=UTF-8",
                        success: function (result) {
                            toastr.success('Changes Saved!')
                            $("#preloader").hide();
                        },
                        error: function (result) {
                            console.log('ERROR ajax: ' + result.errorMessage);
                            toastr.error('Something went wrong')
                            $("#preloader").hide();
                        }
                        });
                        } else {
                        if (model.firstName == "")
                            toastr.error("First Name is required.");
                        if (model.lastName == "")
                            toastr.error("Last Name is required.");
                    }
                },
                toggleNewCard: function () {
                    this.newCard = !this.newCard
                    if (this.newCard) {
                        newCardAdded = true
                        $('#insert-card').append('<div id="card-element"></div><div id="card-errors" role="alert"></div>')

                        // Add an instance of the card Element into the `card-element` <div>
                        card.mount('#card-element');

                        card.addEventListener('change', function (event) {
                            var displayError = document.getElementById('card-errors');
                            if (event.error) {
                                displayError.textContent = event.error.message;
                            } else {
                                displayError.textContent = '';
                            }
                        });
                    }
                    else {
                        newCardAdded = false
                        $('#card-element').remove()
                        $('#card-errors').remove()
                    }
                },
                fundsListener: function () {
                    var form = document.getElementById('payment-form');
                    form.addEventListener('submit', function (event) {
                        event.preventDefault();

                        if (newCardAdded)
                            stripe.createToken(card).then(function (result) {
                                if (result.error) {
                                    // Inform the user if there was an error
                                    var errorElement = document.getElementById('card-errors');
                                    errorElement.textContent = result.error.message;
                                } else {
                                    // Send the token to your server
                                    stripeTokenHandler(result.token);
                                }
                            });
                        else
                            chargeCard($('#creditcards').val())
                    });
                },
                addAdmin: function (admin) {
                    if (model.corporateAdminIds.indexOf(admin.userId) < 0) {
                        model.corporateAdminIds.push(admin.userId);
                        model.admins.push(admin);
                        $('#add-admin-modal').modal('toggle');
                    }
                    else {
                        toastr.error(admin.firstName + ' ' + admin.lastName + ' already added.' , 'Oops!');
                    }
                }
            },
            updated: function () {
                this.getAllCreditCards()
                //if (!newCardAdded) {
                //    for (var i = 0; i < cards.length; ++i)
                //        $('#creditcards').append(cards[i])
                    $('[ui-jp]').uiJp();
               // }
            }
        });

        $('[ui-jp]').uiJp();
    </script>
}